- name: ensure /etc/redpanda exists
  file:
    path: /etc/redpanda
    state: directory
    mode: 0755

- name: Identify advertised ip address
  set_fact:
    advertised_ip: "{{ inventory_hostname if (advertise_public_ips | d() | bool) else private_ip }}"

- name: Reset configuration
  set_fact:
    configuration: {}

- name: Generate configurations
  set_fact:
    configuration: "{{ configuration | combine(lookup('template', custom_config_template.template) | from_yaml, recursive=True) }}"
  loop: "{{ custom_config_templates }}"
  loop_control:
    loop_var: custom_config_template
  when: custom_config_template.condition | default(True)

- name: Merge with user-provided overrides (via redpanda variable)
  set_fact:
    configuration: "{{ configuration | combine(redpanda | default({}), recursive=True) }}"

- name: Check if node looks like it's been initialized
  ansible.builtin.stat:
    path: "{{ redpanda_data_directory }}/redpanda/controller"
  register: controller_stat

- set_fact:
    is_initialized: "{{ controller_stat.stat.isdir is defined and controller_stat.stat.isdir }}"

- name: Generate Node config
  ansible.builtin.template:
    src: "redpanda.yml"
    dest: "/etc/redpanda/redpanda.yaml"
    owner: redpanda
    group: redpanda
  register: nodeconfig_result
  when: not is_initialized

- name: Generate bootstrap
  ansible.builtin.template:
    src: "bootstrap.yml"
    dest: "/etc/redpanda/.bootstrap.yaml"
    owner: redpanda
    group: redpanda
  when: not is_initialized

- name: start redpanda-tuner
  systemd:
    name: redpanda-tuner
    state: started
- name: start redpanda
  systemd:
    name: redpanda
    state: started

- name: Establish Redpanda's current config version
  ansible.builtin.shell:
    cmd: "rpk cluster config status | awk 'BEGIN{NR!=1}{a=0}{if ($2>a) a=$2} END {print a}'"
  register: config_version
  changed_when: False
  run_once: true

- name: Set cluster config
  ansible.builtin.shell:
    cmd: "rpk cluster config set {{ item.key }} {{ item.value }}"
  loop: "{{ configuration.cluster | dict2items }}"
  register: result
  changed_when: '"New configuration version is {{ config_version.stdout|int() }}." not in result.stdout'
  run_once: true

- name: Check if restart needed
  ansible.builtin.shell:
    cmd: "rpk cluster config status | awk '{ print $3 }' | grep -E 'true|false'"
  register: restart_required_rc
  changed_when: False
  run_once: true

- name: Generate Node config
  ansible.builtin.template:
    src: "redpanda.yml"
    dest: "/etc/redpanda/redpanda.yaml"
    owner: redpanda
    group: redpanda
  register: nodeconfig_result
  when: is_initialized


- name: Restart Redpanda
  systemd:
    name: redpanda
    state: restarted
  when: '("true" in restart_required_rc.stdout or (is_initialized and (nodeconfig_result.changed or "Removed" in package_result.results or "1 upgraded" in package_result.results))) and (restart_node | default("true") | bool)'
  throttle: 1
